#!/bin/sh

set -eu

ARCH=$(uname -m)
IMAGES="base kde-home kde-studio kde-dev sway-home sway-studio sway-dev"
REPO=
DATE=$(date +%Y%m%d)
GEN=$(pwgen -sA 7 1)

PKGS_BASE="$(grep '^[^#].' pkg/base.txt | xargs)"
PKGS_KDE="$(grep '^[^#].' pkg/kde.txt | xargs)"
PKGS_SWAY="$(grep '^[^#].' pkg/sway.txt | xargs)"

PKGS_HOME="$(grep '^[^#].' pkg/home.txt | xargs)"
PKGS_STUDIO="$(grep '^[^#].' pkg/studio.txt | xargs)"
PKGS_DEV="$(grep '^[^#].' pkg/dev.txt | xargs)"
PKGS_DEV_GLIBC="$(grep '^[^#].' pkg/dev_glibc.txt | xargs)"
PKGS_NONFREE="$(grep '^[^#].' pkg/nonfree.txt | xargs)"

PKGS_REMOVE="$(grep '^[^#].' pkg/remove.txt | xargs)"

PKGS_KDE_HOME="$PKGS_BASE $PKGS_HOME $PKGS_KDE"
PKGS_KDE_STUDIO="$PKGS_KDE_HOME $PKGS_STUDIO"
PKGS_KDE_DEV="$PKGS_KDE_HOME $PKGS_DEV"
PKGS_SWAY_HOME="$PKGS_BASE $PKGS_HOME $PKGS_SWAY"
PKGS_SWAY_STUDIO="$PKGS_SWAY_HOME $PKGS_STUDIO"
PKGS_SWAY_DEV="$PKGS_SWAY_HOME $PKGS_DEV"

help() {
    echo "${0#/*}: [-a arch] [-b base|kde-home|kde-studio|kde-dev|sway-home|sway-studio|sway-dev] [-r repo] [-R rmpkgs]" >&2
}

while getopts "a:b:hr:" opt; do
case $opt in
    a) ARCH="$OPTARG";;
    b) IMAGES="$OPTARG";;
    h) help; exit 0;;
    r) REPO="-r $OPTARG $REPO";;
    R) REMOVE="$OPTARG";;
    *) help; exit 1;;
esac
done
shift $((OPTIND - 1))

build_variant() {
    variant="$1"
    shift
    IMG=langitketujuh-${variant}-${ARCH}-${DATE}-${GEN}.iso
    SERVICES="acpid dbus earlyoom ntpd ufw uuidd zramen"

    case $variant in
        base)
            PKGS="$PKGS_BASE"
            SERVICES="$SERVICES dhcpcd iwd"
        ;;
        kde-home)
            if [ "$ARCH" = x86_64 ]; then
                PKGS="$PKGS_KDE_HOME $PKGS_NONFREE"
            else
                PKGS="$PKGS_KDE_HOME"
            fi
            SERVICES="$SERVICES NetworkManager backlight bluetoothd bluez-alsa cupsd colord sddm"
        ;;
        kde-studio)
            if [ "$ARCH" = x86_64 ]; then
                PKGS="$PKGS_KDE_STUDIO $PKGS_NONFREE"
            else
                PKGS="$PKGS_KDE_STUDIO"
            fi
            SERVICES="$SERVICES NetworkManager backlight bluetoothd bluez-alsa cupsd colord sddm"
        ;;
        kde-dev)
            if [ "$ARCH" = x86_64 ]; then
                PKGS="$PKGS_KDE_DEV $PKGS_NONFREE $PKGS_DEV_GLIBC"
                REMOVE="$PKGS_REMOVE"
            else
                PKGS="$PKGS_KDE_DEV"
                REMOVE="$PKGS_REMOVE"
            fi
            SERVICES="$SERVICES NetworkManager backlight bluetoothd bluez-alsa cupsd colord sddm"
        ;;
        sway-home)
            if [ "$ARCH" = x86_64 ]; then
                PKGS="$PKGS_SWAY_HOME $PKGS_NONFREE"
            else
                PKGS="$PKGS_SWAY_HOME"
            fi
            SERVICES="$SERVICES dhcpcd iwd greetd"
        ;;
        sway-studio)
            if [ "$ARCH" = x86_64 ]; then
                PKGS="$PKGS_SWAY_STUDIO $PKGS_NONFREE"
            else
                PKGS="$PKGS_SWAY_STUDIO"
            fi
            SERVICES="$SERVICES dhcpcd iwd greetd"
        ;;
        sway-dev)
            if [ "$ARCH" = x86_64 ]; then
                PKGS="$PKGS_SWAY_DEV $PKGS_NONFREE"
            else
                PKGS="$PKGS_SWAY_DEV"
            fi
            SERVICES="$SERVICES dhcpcd iwd greetd"
        ;;
        *)
            >&2 echo "Unknown variant $variant"
            exit 1
        ;;
    esac

    ./mklive.sh -a "$ARCH" -o "$IMG" -p "$PKGS" -R "$REMOVE" -S "$SERVICES" "${REPO}" "$@"
}

if [ ! -x mklive.sh ]; then
    echo mklive.sh not found >&2
    exit 1
fi

for image in $IMAGES; do
    build_variant "$image" "$@"
done
