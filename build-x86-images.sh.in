#!/bin/sh

set -eu

ARCH=$(uname -m)
IMAGES="kde-home kde-studio kde-dev sway-home sway-studio sway-dev"
REPO=
DATE=$(date +%Y%m%d)
GEN=$(pwgen -sA 7 1)

KDE="$(grep '^[^#].' pkg/KDE.txt | xargs)"
SWAY="$(grep '^[^#].' pkg/SWAY.txt | xargs)"

HOME="$(grep '^[^#].' pkg/HOME.txt | xargs)"
STUDIO="$(grep '^[^#].' pkg/STUDIO.txt | xargs)"
DEV="$(grep '^[^#].' pkg/DEV.txt | xargs)"

KDE_HOME="$(echo $HOME $KDE)"
KDE_STUDIO="$(echo $HOME $KDE $STUDIO)"
KDE_DEV="$(echo $HOME $KDE $DEV)"
SWAY_HOME="$(echo $HOME $SWAY )"
SWAY_STUDIO="$(echo $HOME $SWAY $STUDIO)"
SWAY_DEV="$(echo $HOME $SWAY $DEV)"

help() {
    echo "${0#/*}: [-a arch] [-b kde-home|kde-studio|kde-dev|sway-home|sway-studio|sway-dev] [-r repo]" >&2
}

while getopts "a:b:hr:" opt; do
case $opt in
    a) ARCH="$OPTARG";;
    b) IMAGES="$OPTARG";;
    h) help; exit 0;;
    r) REPO="-r $OPTARG $REPO";;
    *) help; exit 1;;
esac
done
shift $((OPTIND - 1))

build_variant() {
    variant="$1"
    IMG=langitketujuh-${variant}-${ARCH}-${DATE}-${GEN}.iso
    SERVICES="dbus backlight bluetoothd bluez-alsa cupsd colord earlyoom ntpd ufw uuidd zramen"

    case $variant in
        kde-home)
            PKGS="$KDE_HOME"
            SERVICES="$SERVICES NetworkManager sddm"
        ;;
        kde-studio)
            PKGS="$KDE_STUDIO"
            SERVICES="$SERVICES NetworkManager sddm"
        ;;
        kde-dev)
            PKGS="$KDE_DEV"
            SERVICES="$SERVICES NetworkManager sddm"
        ;;
        sway-home)
            PKGS="$SWAY_HOME"
            SERVICES="$SERVICES NetworkManager greetd"
        ;;
        sway-studio)
            PKGS="$SWAY_STUDIO"
            SERVICES="$SERVICES NetworkManager greetd"
        ;;
        sway-dev)
            PKGS="$SWAY_DEV"
            SERVICES="$SERVICES NetworkManager greetd"
        ;;
        *)
            >&2 echo "Unknown variant $variant"
            exit 1
        ;;
    esac

    ./mklive.sh -a "$ARCH" -o "$IMG" -p "$PKGS" -S "$SERVICES" ${REPO} "$@"
}

if [ ! -x mklive.sh ]; then
    echo mklive.sh not found >&2
    exit 1
fi

for image in $IMAGES; do
    build_variant "$image"
done
